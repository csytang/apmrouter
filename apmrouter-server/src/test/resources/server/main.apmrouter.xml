<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"

       xmlns:lang="http://www.springframework.org/schema/lang"       
       xsi:schemaLocation="
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
       "  >
	
	
	
	
	<context:annotation-config/>
	<context:mbean-export registration="ignoreExisting" />
	
	<bean id="ServerTracerFactory" class="org.helios.apmrouter.server.tracing.ServerTracerFactory" factory-method="getInstance" />
	<bean id="VirtualAgentManager" class="org.helios.apmrouter.server.tracing.virtual.VirtualAgentManager">
		<property name="invalidationPeriod" value="30000"/>
		<property name="metricSubmitter" ref="ServerTracerFactory"/>
	</bean>
	<bean id="ServerMonitor" class="org.helios.apmrouter.server.monitor.ServerMonitor" depends-on="ServerTracerFactory" />		

	<bean id="HotDeployer" class="org.helios.apmrouter.deployer.SpringHotDeployer">
		<property name="hotDirNames">
			<set>
				<!-- 
				<value>C:/Users/nwhitehe/.apmrouter/hotdir/jolokia</value>
				<value>C:/Users/nwhitehe/.apmrouter/hotdir/destinations</value>
				
				<value>/home/nwhitehead/.apmrouter/hotdir/jolokia</value>
				<value>/home/nwhitehead/.apmrouter/hotdir/nash</value>
				-->
			</set>
		</property>
	</bean>
	
	<bean id="ChannelSessions" class="org.helios.apmrouter.server.services.session.SharedChannelGroup" factory-method="getInstance" >
		
	</bean>
	
	<bean id="applicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster">
		<property name="taskExecutor" ref="SpringEventPool" />
	</bean>
	
	<bean id="SpringEventPool" class="org.helios.apmrouter.util.thread.ManagedThreadPool">
		<qualifier value="SpringEvent"/>
		<constructor-arg>
			<bean id="SpringEventPoolConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="5" />
				<property name="coreThreadsStarted" value="1" />
				<property name="daemonThreads" value="true" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="UDPAgentListenerWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="UDPAgentListenerWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="100" />
				<property name="coreThreadsStarted" value="1" />
			</bean>
		</constructor-arg>
	</bean>
 
<!-- 
 	<bean id="ManagedChannelGroup" class="org.helios.apmrouter.server.net.listener.netty.group.ManagedChannelGroup">
 		 <constructor-arg value="APMRouterChannelGroup" />
 	</bean>
 --> 
 	<bean id="MetricCatalog" class="org.helios.apmrouter.catalog.MetricCatalogInitializer">
 		<property name="catalogClassName" value="org.helios.apmrouter.metric.catalog.heap.StringKeyedHeapMetricCatalog" />
 		
 	</bean>
 	
 	<bean id="AgentMetricHandler" class="org.helios.apmrouter.server.net.listener.netty.handlers.AgentMetricHandler">
 		<property name="metricCatalog" ref="MetricCatalog" />
 	</bean>
 	
 	<bean id="PingRequestHandler" class="org.helios.apmrouter.server.net.listener.netty.handlers.PingRequestHandler" />
 	
 	
 	<bean id="UDPAgentOperationRouter" class="org.helios.apmrouter.server.net.listener.netty.handlers.udp.UDPAgentOperationRouter" />
 	
 	<bean id="UDPExecutionHandler" class="org.jboss.netty.handler.execution.ExecutionHandler">
 		<constructor-arg>
		 	<bean id="UDPMemoryAwareThreadPoolExecutor" class="org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor" >
		 		<constructor-arg value="10" />
		 		<constructor-arg value="1048576" />
		 		<constructor-arg value="1048576" />
		 	</bean> 		
 		</constructor-arg>
 	</bean>
 	
 	
 	
 	
 	<bean id="UDPAgentListener" class="org.helios.apmrouter.server.net.listener.netty.UDPAgentListener">
 		<property name="bindHost" value="0.0.0.0" />
 		<property name="bindPort" value="2094" />
 		<property name="channelHandlers">
 			<map>
 				<entry key="0" value="UDPExecutionHandler" />
 				<entry key="1" value="UDPAgentOperationRouter" />
 			</map>
 		</property>
 		<property name="workerPool" ref="UDPAgentListenerWorkers" />
 	</bean>
 	
 	
 	<bean id="metricLastTimeSeenService" class="org.helios.apmrouter.catalog.MetricLastTimeSeenService"/>

 	
 	<bean id="PatternRouter" class="org.helios.apmrouter.router.PatternRouter" >
 		<property name="routingQueueFair" value="true" />
 		<property name="routingQueueSize" value="5000" />
 		<property name="routingWorkers" value="8" />
 		<property name="threadPool" ref="PatternRouterWorkers" />
 	</bean>
 	
 	<bean id="Conflator" class="org.helios.apmrouter.router.MetricConflationService">
 		<property name="conflationPeriod" value="1000" />
 		<property name="maxQueueSize" value="1000" />
 		<property name="workerThreads" value="1" />
 	</bean>

	<bean id="PatternRouterWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="PatternRouterWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="8" />
				<property name="queueSize" value="100000" />
				<property name="maximumPoolSize" value="8" />
				<property name="coreThreadsStarted" value="8" />
			</bean>
		</constructor-arg>
	</bean>


	<bean id="APMRouterScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler" />
	
</beans>

