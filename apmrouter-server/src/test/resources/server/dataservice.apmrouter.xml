<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"

       xmlns:lang="http://www.springframework.org/schema/lang"       
       xsi:schemaLocation="
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd       
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd       
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
       "  >
	
	
	<tx:annotation-driven transaction-manager="txManager"  />
	
	<context:component-scan base-package="org.helios" >
		<!-- <context:include-filter type="annotation" expression="org.helios.apmrouter.dataservice.json.JSONRequestHandler"/> -->
		<context:include-filter type="assignable" expression="org.helios.apmrouter.subscription.criteria.builder.AbstractSubscriptionCriteriaBuilder"/>
	</context:component-scan>
	

	
<!-- 
	
 -->
<bean id="catalog" class="org.helios.apmrouter.dataservice.json.catalog.CatalogJSONDataService" />
<bean id="sub" class="org.helios.apmrouter.dataservice.json.sub.SubscriptionDataService" />
<bean id="jmx" class="org.helios.apmrouter.subscription.impls.jmx.JMXSubscriptionCriteriaBuilder" /> 	
<bean id="h2ts" class="org.helios.apmrouter.dataservice.json.h2timeseries.H2TimeSeriesJSONDataService">
	<property name="dataSource" ref="DataSource"></property>
</bean>

	<bean id="SubDestinationService" class="org.helios.apmrouter.destination.subdestination.SubDestinationService"/>

	<bean id="MetricURISubscriptionService" class="org.helios.apmrouter.dataservice.json.catalog.MetricURISubscriptionService">
	
		<property name="metricStateChangeEventThreads" value="1" />
		<property name="newMetricEventThreads" value="1" />
		<property name="catalogDataSource" ref="DataSource" />		
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="agentMetricURISubHandler" class="org.helios.apmrouter.server.net.listener.netty.handlers.MetricURISubscriptionHandler">
		<property name="subService" ref="MetricURISubscriptionService"/>
	</bean>

	
	<bean id="DataServiceWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="DataServiceWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="100" />
				<property name="coreThreadsStarted" value="1" />
				<property name="queueSize" value="1" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="DataServiceBoss" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="DataServiceBossConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="100" />
				<property name="coreThreadsStarted" value="1" />
				<property name="queueSize" value="1" />
			</bean>
		</constructor-arg>
	</bean>
	
 	<bean id="DataServiceListener" class="org.helios.apmrouter.server.services.DataServer">
 		<property name="workerPool" ref="DataServiceWorkers" />
 		<property name="bossPool" ref="DataServiceBoss" />
 	 		<property name="bindHost" value="0.0.0.0" />
 		<property name="bindPort" value="8087" />
 	
		 <property name="channelOptions">
		 	<map>
		 		<entry key="child.keepAlive"><value type="boolean" >true</value> </entry>
		 	</map>
		 </property> 		
 	</bean>
 	
 	<!-- 
 	
 	 -->
 	 
 	 <bean id="JsonResponseDownstreamHandler" class="org.helios.apmrouter.server.net.listener.netty.handlers.JsonResponseDownstreamHandler" />
 	 
 	 <bean id="ProtocolSwitch" class="org.helios.apmrouter.server.unification.protocol.ProtocolSwitch" />
 	 
 	 <bean id="ServerPipelineFactory" class="org.helios.apmrouter.server.unification.ServerPipelineFactory" />
 	 
 	 <bean id="HttpProtocol" class="org.helios.apmrouter.server.unification.protocol.http.HttpProtocolInitiator" />
 	 
 	 <bean id="HttpPipelineModifier" class="org.helios.apmrouter.server.unification.pipeline.http.HttpPipelineModifier"/>
 	 
 	 <bean id="HttpRequestRouter" class="org.helios.apmrouter.server.unification.pipeline.http.HttpRequestRouter" />
 	 
 	<bean id="fs" class="org.helios.apmrouter.server.unification.pipeline.http.HttpStaticFileServerHandler" >
 		<constructor-arg value="./src/main/resources/www" />
 	</bean>
 	
 	<bean id="snoop" class="org.helios.apmrouter.server.unification.pipeline.http.HttpSnoopServerHandler">
 		<property name="uriPatterns">
 			<set>
 				<value>/snoop</value>
 				<value>/snoop/</value>
 			</set>
 		</property>
 	</bean>
 	
 	<bean id="mauto" class="org.helios.apmrouter.server.unification.pipeline.http.MetricAutoCompleteService">
 		<property name="uriPatterns">
 			<set>
 				<value>/mauto</value>
 				<value>/mauto/</value>
 			</set>
 		</property> 	
 	</bean>
 	
 	 
 	 <bean id="ws" class="org.helios.apmrouter.server.unification.pipeline.http.WebSocketServiceHandler" />
 	
 	<bean id="JSONRequestRouter" class="org.helios.apmrouter.dataservice.json.JSONRequestRouter" />
 	
	
	<bean id="SubscriptionService" class="org.helios.apmrouter.subscription.SubscriptionService" />
	
	


	<bean id="ProxyWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="ProxyWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="100" />
				<property name="coreThreadsStarted" value="1" />
				<property name="queueSize" value="1" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="ProxyBoss" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="ProxyBossConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="100" />
				<property name="coreThreadsStarted" value="1" />
				<property name="queueSize" value="1" />
			</bean>
		</constructor-arg>
	</bean>
 	
 	
 	<bean id="ProxyChannelFactory" class="org.helios.apmrouter.server.unification.pipeline.http.proxy.ProxyChannelFactory">
 		<property name="workerPool" ref="ProxyWorkers" />
 		<property name="bossPool" ref="ProxyBoss" />
		 <property name="channelOptions">
		 	<map>
		 		<entry key="keepAlive"><value type="boolean" >true</value> </entry>
		 		<entry key="tcpNoDelay"><value type="boolean" >true</value> </entry>
		 		<entry key="reuseAddress"><value type="boolean" >true</value> </entry>
		 		<entry key="connectTimeoutMillis"><value type="int" >1000</value> </entry>		 		
		 	</map>
		 </property> 		
 	</bean>
 	
 	<bean id="jmxProxy" class="org.helios.apmrouter.server.unification.pipeline.http.proxy.HttpRequestProxy">
 		<property name="targetHost" value="localhost" />
 		<property name="targetPort" value="8161" />
 		<property name="uriPatterns">
 			<set>
 				<value>/jolokia</value>
 				<value>/jolokia/</value>
 				<value>/jmx/</value>
 				<value>/jmx/</value>
 				<value>/highcharts/</value>
 				<value>/highcharts</value>
 				
 			</set>
 		</property>
 	</bean> 
 	
 	<bean id="JSONMarshaller" class="org.helios.apmrouter.dataservice.json.marshalling.GSONJSONMarshaller">
 		<property name="adapterInstances">
 			<map>
 				<entry value-ref="ObjectNameSerializer" >
 					<key><value type="java.lang.Class">javax.management.ObjectName</value></key>
 				</entry>
 				<entry value-ref="CompositeDataSupportSerializer" >
 					<key><value type="java.lang.Class">javax.management.openmbean.CompositeDataSupport</value></key>
 				</entry>
 				<entry value-ref="UtilDateSerializer" >
 					<key><value type="java.lang.Class">java.util.Date</value></key>
 				</entry>
 				
 			</map>
 		</property>
 	</bean>
 	
	<bean id="CompositeDataSupportSerializer" class="org.helios.apmrouter.dataservice.json.marshalling.encoders.CompositeDataSupportSerializer"/>
 	<bean id="ObjectNameSerializer" class="org.helios.apmrouter.dataservice.json.marshalling.encoders.ObjectNameSerializer"/>
 	<bean id="UtilDateSerializer" class="org.helios.apmrouter.dataservice.json.marshalling.encoders.UtilDateSerializer" />

	
</beans>

