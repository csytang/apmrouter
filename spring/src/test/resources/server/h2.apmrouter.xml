<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="       
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	  
	 <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="DataSource"/>
	  </bean>
	
	 <bean id="DataSource"
	      class="org.apache.commons.dbcp.BasicDataSource"
	      destroy-method="close"
	      p:url="jdbc:h2:mem:helios;JMX=TRUE;DB_CLOSE_DELAY=-1"
	      p:driverClassName="org.h2.Driver"
	      p:username="sa"	      
	      p:password=""	      
	      p:initial-size="2"
	      p:max-active="5"  
	      p:pool-prepared-statements="true"
	      p:validation-query="SELECT SYSTIME"
	      p:test-on-borrow="true"
	      p:test-while-idle="false"/>
	    
	    <bean id="H2WebServer" class="org.h2.tools.Server"
	        factory-method="createWebServer" init-method="start">
	        <constructor-arg value="-web,-webAllowOthers,-webPort,3082" />
	    </bean>
	    <bean id="H2TCPServer" class="org.h2.tools.Server"
	        factory-method="createTcpServer" init-method="start">
	        <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,3083" />
	    </bean>	   
	
	
	<bean id="H2DataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy" >
		<qualifier value="H2DataSource" />
		<property name="targetDataSource" ref="DataSource" />
		<property name="reobtainTransactionalConnections" value="true" />
	</bean>
	
	<bean id="CatalogService" class="org.helios.apmrouter.catalog.jdbc.h2.H2JDBCMetricCatalog" init-method="start" depends-on="dbInit" />
	
	
	
	
	<bean id="dbInit" class="org.helios.apmrouter.catalog.jdbc.h2.ScriptExecution" init-method="start">
		<constructor-arg ref="DataSource" />
		<constructor-arg value="RUNSCRIPT FROM './src/test/resources/server/ddl/metric-catalog.sql'" />
	</bean>
	
	
	
	

</beans>



<!-- 
	<bean id="primaryDataSourceH2" class="org.h2.jdbcx.JdbcDataSource" >
		<property name="uRL" value="jdbc:h2:mem:fx;DB_CLOSE_DELAY=-1;JMX=TRUE;TRACE_LEVEL_FILE=1" />
		<property name="user" value="sa" />
		<property name="password" value="" />
		<property name="description" value="The primary data source" />		
	</bean>


	<bean id="H2ConnectionFactory" class="org.apache.commons.dbcp.managed.DataSourceConnectionFactory">
		<constructor-arg ref="primaryDataSourceH2" />
	</bean>
	
	<bean id="BasicManagedDataSource" class="org.apache.commons.dbcp.managed.BasicManagedDataSource" >
		<property name="xaDataSourceInstance" ref="primaryDataSourceH2" />
		<property name="transactionManager" ref="txManager" />
	</bean>


 -->
 
		  <!--  Uncomment to enable remote access to the in-memory test database -->
	  <!--
	    <bean id="H2WebServer" class="org.h2.tools.Server"
	        factory-method="createWebServer" init-method="start">
	        <constructor-arg value="-web,-webAllowOthers,true,-webPort,3082" />
	    </bean>
	    <bean id="H2TCPServer" class="org.h2.tools.Server"
	        factory-method="createTcpServer" init-method="start">
	        <constructor-arg value="-tcp,-tcpAllowOthers,true,-tcpPort,3083" />
	    </bean>	   
	    -->	    
 