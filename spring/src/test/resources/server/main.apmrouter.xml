<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"

       xmlns:lang="http://www.springframework.org/schema/lang"       
       xsi:schemaLocation="
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
       "  >
	
	
	
	
	<context:annotation-config/>
	<context:mbean-export/>

	

	<bean id="NashServer" class="org.helios.nash.Server" init-method="start" destroy-method="stop">
		<constructor-arg value="0.0.0.0"/>
		<constructor-arg value="2113"/>
		<constructor-arg>
			<bean id="NashBoss" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="NashBossConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean id="NashWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="NashWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
		</constructor-arg>		
	</bean>
	
	<bean id="SpringEventPool" class="org.helios.apmrouter.util.thread.ManagedThreadPool">
		<qualifier value="SpringEvent"/>
		<constructor-arg>
			<bean id="SpringEventPoolConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="5" />
				<property name="coreThreadsStarted" value="1" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="UDPAgentListenerWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="UDPAgentListenerWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="1" />
				<property name="maximumPoolSize" value="100" />
				<property name="coreThreadsStarted" value="1" />
			</bean>
		</constructor-arg>
	</bean>
 
<!-- 
 	<bean id="ManagedChannelGroup" class="org.helios.apmrouter.server.net.listener.netty.group.ManagedChannelGroup">
 		 <constructor-arg value="APMRouterChannelGroup" />
 	</bean>
 --> 
 	<bean id="MetricCatalog" class="org.helios.apmrouter.catalog.MetricCatalogInitializer">
 		<property name="catalogClassName" value="org.helios.apmrouter.metric.catalog.heap.StringKeyedHeapMetricCatalog" />
 	</bean>
 	
 	<bean id="AgentMetricHandler" class="org.helios.apmrouter.server.net.listener.netty.handlers.AgentMetricHandler">
 		<property name="metricCatalog" ref="MetricCatalog" />
 	</bean>
 	
 	<bean id="PingRequestHandler" class="org.helios.apmrouter.server.net.listener.netty.handlers.PingRequestHandler" />
 	
 	
 	<bean id="UDPAgentOperationRouter" class="org.helios.apmrouter.server.net.listener.netty.handlers.udp.UDPAgentOperationRouter" />
 	
 	<bean id="UDPExecutionHandler" class="org.jboss.netty.handler.execution.ExecutionHandler">
 		<constructor-arg>
		 	<bean id="UDPMemoryAwareThreadPoolExecutor" class="org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor" >
		 		<constructor-arg value="10" />
		 		<constructor-arg value="1048576" />
		 		<constructor-arg value="1048576" />
		 	</bean> 		
 		</constructor-arg>
 	</bean>
 	
 	
 	
 	
 	<bean id="UDPAgentListener" class="org.helios.apmrouter.server.net.listener.netty.UDPAgentListener">
 		<property name="bindHost" value="0.0.0.0" />
 		<property name="bindPort" value="2094" />
 		<property name="channelHandlers">
 			<map>
 				<entry key="0" value="UDPExecutionHandler" />
 				<entry key="1" value="UDPAgentOperationRouter" />
 			</map>
 		</property>
 		<property name="workerPool" ref="UDPAgentListenerWorkers" />
 	</bean>
 	
 	
 	
 	<bean id="BaseDestination" class="org.helios.apmrouter.destination.BaseDestination" >
 		<property name="matchPatterns">
	 		<util:set>
				<value>.*</value>	 			
	 		</util:set>
 		</property>
 	</bean>
 	
 	<bean id="PatternRouter" class="org.helios.apmrouter.router.PatternRouter" >
 		<property name="routingQueueFair" value="true" />
 		<property name="routingQueueSize" value="5000" />
 		<property name="routingWorkers" value="8" />
 		<property name="threadPool" ref="PatternRouterWorkers" />
 	</bean>
 	
 	<bean id="Conflator" class="org.helios.apmrouter.router.MetricConflationService">
 		<property name="conflationPeriod" value="1000" />
 		<property name="maxQueueSize" value="1000" />
 		<property name="workerThreads" value="1" />
 	</bean>

	<bean id="PatternRouterWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
		<constructor-arg>
			<bean id="PatternRouterWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
				<property name="corePoolSize" value="8" />
				<property name="queueSize" value="10000" />
				<property name="maximumPoolSize" value="8" />
				<property name="coreThreadsStarted" value="8" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="GraphiteDestination" class="org.helios.apmrouter.destination.graphite.GraphiteDestination">
 		<property name="matchPatterns">
	 		<util:set>
				<value>LONG.*|DELTA.*</value>	 			
	 		</util:set>
 		</property>
 		<property name="graphiteHost" value="10.5.104.24" />
 		<property name="graphitePort" value="2003" />
 		<property name="reconnectPeriod" value="15000"/>
 		<property name="sizeTrigger" value="5"/>
 		<property name="timeTrigger" value="5000"/>
 		
 		
 		<property name="workerPool" >
			<bean id="GraphiteDestinationWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="GraphiteDestinationWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
 		</property>
 		<property name="bossPool" >
			<bean id="GraphiteDestinationBoss" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="GraphiteDestinationBossConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
 		</property>
	</bean>

 
 	<bean id="LocalOpenTSDB" class="org.helios.apmrouter.destination.opentsdb.OpenTSDBDestination">
 		<property name="matchPatterns">
	 		<util:set>
				<value>LONG.*|DELTA.*</value>	 			
	 		</util:set>
 		</property>
 		<!-- <property name="openTSDBHost" value="192.168.1.156" /> -->
 		<!--  <property name="openTSDBHost" value="heliojira.dnsalias.org.home" />  -->
 		<!-- <property name="openTSDBHost" value="localhost" /> -->
 		<property name="openTSDBHost" value="pdk-pt-cupas-01" />
	</bean>
 	
	
	<!-- 
	<bean id="LocalTrapServer" class="org.helios.apmrouter.destination.snmp.SNMPManager">
		<property name="address" value="udp:10.230.13.67/162" />
		<property name="communityName" value="public" />
		<property name="dispatcherThreadCount" value="2" />
		<property name="retryCount" value="3" />
	</bean>
	
	<bean id="ORDSpectrum" class="org.helios.apmrouter.destination.snmp.SNMPManager">
		<property name="address" value="udp:10.6.105.61/162" />
		<property name="communityName" value="public" />
		<property name="dispatcherThreadCount" value="2" />
		<property name="retryCount" value="3" />
	</bean>
	
	
	<bean id="PDK3Tunnel" class="org.helios.apmrouter.destination.snmp.SNMPManager">
		<property name="address" value="tcp:cube/1053" />
		<property name="communityName" value="public" />
		<property name="dispatcherThreadCount" value="2" />
		<property name="retryCount" value="3" />
	</bean>
	
	
	
	<bean id="SNMPDestination" class="org.helios.apmrouter.destination.snmp.SNMPDestination">
 		<property name="matchPatterns">
	 		<util:set>
				<value>PDU.*</value>	 			
	 		</util:set>
 		</property>
	</bean>
	
	
	<bean id="GraphiteDestination" class="org.helios.apmrouter.destination.graphite.GraphiteDestination">
 		<property name="matchPatterns">
	 		<util:set>
				<value>LONG-.*|DELTA-.*</value>	 			
	 		</util:set>
 		</property>
 		<property name="graphiteHost" value="10.5.104.24" />
 		<property name="graphitePort" value="2003" />
 		<property name="reconnectPeriod" value="15000"/>
 		<property name="sizeTrigger" value="5"/>
 		<property name="timeTrigger" value="5000"/>
 		
 		
 		<property name="workerPool" >
			<bean id="GraphiteDestinationWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="GraphiteDestinationWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
 		</property>
 		<property name="bossPool" >
			<bean id="GraphiteDestinationBoss" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="GraphiteDestinationBossConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
 		</property>
	</bean>
	
	<bean id="CubeDestination" class="org.helios.apmrouter.destination.cube.CubeDestination">
 		<property name="matchPatterns">
	 		<util:set>
				<value>LONG-.*|DELTA-.*</value>	 			
	 		</util:set>
 		</property>
 		<property name="cubeUri" value="ws://cube:1080/1.0/event/put" />
 		
 		
 		<property name="workerPool" >
			<bean id="CubeDestinationWorkers" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="CubeDestinationWorkersConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
 		</property>
 		<property name="bossPool" >
			<bean id="CubeDestinationBoss" class="org.helios.apmrouter.util.thread.ManagedThreadPool">		
				<constructor-arg>
					<bean id="CubeDestinationBossConfig" class="org.helios.apmrouter.util.thread.ThreadPoolConfig">
						<property name="corePoolSize" value="1" />
						<property name="maximumPoolSize" value="100" />
						<property name="coreThreadsStarted" value="1" />
					</bean>
				</constructor-arg>
			</bean>
 		</property>
	</bean>
	-->	
	
	<bean id="APMRouterScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler" />
	
	<bean id="LogstashDestination" class="org.helios.apmrouter.destination.logstash.LogstashDestination">
		
	</bean>
	
	<bean id="Log4jLogstashSender" class="org.helios.apmrouter.destination.logstash.senders.Log4jLogstashSender">
		<property name="loggerName" value="LOGSTASH"/>
	</bean>
	
	

 	
</beans>

