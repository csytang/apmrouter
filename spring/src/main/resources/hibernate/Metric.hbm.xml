<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Oct 27, 2012 1:30:47 PM by Hibernate Tools 3.6.0 -->
<hibernate-mapping  >
    <class name="org.helios.apmrouter.catalog.domain.Metric" entity-name="metric" table="METRIC" schema="PUBLIC" catalog="DB"  >
        <id name="metricId" type="java.lang.Long">
            <column name="METRIC_ID" />
            <generator class="identity" />
        </id>
        <many-to-one name="traceType" class="org.helios.apmrouter.catalog.domain.TraceType" entity-name="type" fetch="join" lazy="false">
            <column name="TYPE_ID" not-null="true">
                <comment>The metric type of the metric</comment>
            </column>
        </many-to-one>
        
         
        <many-to-one name="agent" class="org.helios.apmrouter.catalog.domain.Agent" entity-name="agent" fetch="join" lazy="false"   >
            <column name="AGENT_ID" not-null="true" >
                <comment>The agent identifier for this metric</comment>
            </column>
        </many-to-one>
        
        
        <property name="namespace" type="string" not-null="true">
            <column name="NAMESPACE" length="200">
                <comment>The namespace of the metric</comment>
            </column>
        </property>
        
        <property name="narr" type="org.helios.apmrouter.catalog.jdbc.h2.StringArrayDataType" not-null="true">
            <column name="NARR" >
                <comment>The namespace items array of the metric</comment>
            </column>
        </property>
        
        
        <property name="parent" type="string" not-null="true" update="false"  >
            <column name="PARENT" length="200">
                <comment>The parent of the namespace of the metric</comment>
            </column>
        </property>
        
        <property name="root" type="string" not-null="true" update="false"  >
            <column name="ROOT" length="200">
                <comment>The root of the namespace of the metric</comment>
            </column>
        </property>
        
        
        
        <property name="level" type="short" update="false">
            <column name="LEVEL" not-null="true">
                <comment>The number of namespaces in the namespace</comment>
            </column>
        </property>
        <property name="name" type="string">
            <column name="NAME" length="60">
                <comment>The point of the metric name</comment>
            </column>
        </property>
        <property name="firstSeen" type="timestamp">
            <column name="FIRST_SEEN" length="23" not-null="true">
                <comment>The first time this metric was seen</comment>
            </column>
        </property>
        <property name="lastSeen" type="timestamp">
            <column name="LAST_SEEN" length="23">
                <comment>The last time this metric was seen</comment>
            </column>
        </property>
    </class>
    <query read-only="true"   name="allMetricsForAgent">from metric m where m.agent.agentId = :agentId
    	<query-param name="agentId" type="java.lang.Integer"/>
    </query>
    
    <query read-only="true"   name="rootMetricsForAgent">select distinct(m.root), 'root' from metric m where m.agent.agentId = :agentId
    	<query-param name="agentId" type="java.lang.Integer"/>
    </query>
    <query read-only="true"   name="rootPlusMetricsForAgent">select distinct(substring(m.parent, length(m.root)+1)) ,'rootPlus' from metric m where m.agent.agentId = :agentId and m.root = :root and m.root != m.parent
    	<query-param name="agentId" type="java.lang.Integer"/>
    	<query-param name="root" type="java.lang.String"/>
    </query>
    <query read-only="true"   name="metricParentsForAgent">select distinct(m.namespace), 'folders' from metric m where m.agent.agentId = :agentId and m.parent = :parent
    	<query-param name="agentId" type="java.lang.Integer"/>
    	<query-param name="parent" type="java.lang.String"/>
    </query>
    <query read-only="true"   name="metricNodesForAgent">select m, 'node' from metric m where m.agent.agentId = :agentId and m.parent = :parent
    	<query-param name="agentId" type="java.lang.Integer"/>
    	<query-param name="parent" type="java.lang.String"/>
    </query>
    <query read-only="true"   name="findMinLevelMetricsForAgent">from metric m where m.level = m.agent.minLevel and m.agent.agentId = :agentId
    	<query-param name="agentId" type="java.lang.Integer"/>
    </query>
</hibernate-mapping>
	